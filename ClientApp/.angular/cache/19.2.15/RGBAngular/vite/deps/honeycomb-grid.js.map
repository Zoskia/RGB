{
  "version": 3,
  "sources": ["../../../../../../node_modules/honeycomb-grid/dist/honeycomb-grid.mjs"],
  "sourcesContent": ["const l = r => Number.isFinite(r) && !Number.isNaN(r),\n  p = r => typeof r == \"object\" && r !== null,\n  wt = r => p(r) && l(r.q) && l(r.r),\n  V = r => typeof r == \"function\",\n  S = r => p(r) && l(r.col) && l(r.row),\n  Z = r => p(r) && l(r.x) && l(r.y),\n  H = r => Array.isArray(r) && l(r[0]) && l(r[1]),\n  P = (r, t) => t + r * (t & 1) >> 1;\nfunction X(r, t) {\n  return (r % t + t) % t;\n}\nconst D = (r, t) => X(r + t, 8),\n  E = ([r, t, e = -r - t]) => ({\n    q: r,\n    r: t,\n    s: e\n  });\nfunction C({\n  q: r,\n  r: t,\n  s: e\n}) {\n  const n = l(r),\n    s = l(t),\n    o = l(e);\n  if (n && s && o) return {\n    q: r,\n    r: t,\n    s: e\n  };\n  if (n && s) return {\n    q: r,\n    r: t,\n    s: -r - t\n  };\n  if (n && o) return {\n    q: r,\n    r: -r - e,\n    s: e\n  };\n  if (s && o) return {\n    q: -t - e,\n    r: t,\n    s: e\n  };\n  throw new TypeError(`Can't determine three cube coordinates from less than two coordinates. Received: { q: ${r}, r: ${t}, s: ${e} }.`);\n}\nvar x = /* @__PURE__ */(r => (r.FLAT = \"FLAT\", r.POINTY = \"POINTY\", r))(x || {});\nfunction G(r, t) {\n  if (p(r) && r.xRadius > 0 && r.yRadius > 0) return r;\n  if (p(r) && r.width > 0 && r.height > 0) {\n    const {\n      width: e,\n      height: n\n    } = r;\n    return t === x.POINTY ? {\n      xRadius: e / Math.sqrt(3),\n      yRadius: n / 2\n    } : {\n      xRadius: e / 2,\n      yRadius: n / Math.sqrt(3)\n    };\n  }\n  if (r > 0) return {\n    xRadius: r,\n    yRadius: r\n  };\n  throw new TypeError(`Invalid dimensions: ${JSON.stringify(r)}. Dimensions must be expressed as an Ellipse ({ xRadius: number, yRadius: number }), a Rectangle ({ width: number, height: number }) or a number.`);\n}\nfunction tt(r, t) {\n  if (Z(r)) return r;\n  if (!t) throw new TypeError(`Supply a bounding box ({ width: number, height: number }). Received: ${JSON.stringify(t)}`);\n  if (r === \"topLeft\") return {\n    x: t.width * -0.5,\n    y: t.height * -0.5\n  };\n  throw new TypeError(`Invalid origin: ${JSON.stringify(r)}. Origin must be expressed as a Point ({ x: number, y: number }) or the string 'topLeft'.`);\n}\nclass $ {\n  static get settings() {\n    const {\n      dimensions: t,\n      orientation: e,\n      origin: n,\n      offset: s\n    } = this.prototype;\n    return {\n      dimensions: t,\n      orientation: e,\n      origin: n,\n      offset: s\n    };\n  }\n  /**\n   * This returns a point relative to the __top left corner__ of the hex with coordinates `[0, 0]`, ignoring any `origin` you may have set.\n   *\n   * @deprecated This probably doesn't do what you expect. If you want the center coordinates of a hex, use `hex.x` and `hex.y` instead.\n   * See https://github.com/flauwekeul/honeycomb/discussions/95#discussioncomment-5158862.\n   */\n  get center() {\n    const {\n      width: t,\n      height: e,\n      x: n,\n      y: s\n    } = this;\n    return {\n      x: t / 2 - n,\n      y: e / 2 - s\n    };\n  }\n  get col() {\n    return W(this).col;\n  }\n  // todo: add to docs that this always returns corners relative to Hex(0, 0)\n  get corners() {\n    const {\n      orientation: t,\n      width: e,\n      height: n,\n      x: s,\n      y: o\n    } = this;\n    return t === x.POINTY ? rt(e, n, s, o) : et(e, n, s, o);\n  }\n  get dimensions() {\n    return T.dimensions;\n  }\n  get height() {\n    const {\n      orientation: t,\n      dimensions: {\n        yRadius: e\n      }\n    } = this;\n    return t === x.POINTY ? e * 2 : e * Math.sqrt(3);\n  }\n  get isFlat() {\n    return this.orientation === x.FLAT;\n  }\n  get isPointy() {\n    return this.orientation === x.POINTY;\n  }\n  get orientation() {\n    return T.orientation;\n  }\n  get origin() {\n    return T.origin;\n  }\n  get offset() {\n    return T.offset;\n  }\n  get row() {\n    return W(this).row;\n  }\n  get width() {\n    const {\n      orientation: t,\n      dimensions: {\n        xRadius: e\n      }\n    } = this;\n    return t === x.POINTY ? e * Math.sqrt(3) : e * 2;\n  }\n  get x() {\n    return J(this).x;\n  }\n  get y() {\n    return J(this).y;\n  }\n  get s() {\n    return -this.q - this.r;\n  }\n  q;\n  r;\n  constructor(t = [0, 0]) {\n    const {\n      q: e,\n      r: n\n    } = N(this, t);\n    this.q = e, this.r = n;\n  }\n  clone(t = this) {\n    return new this.constructor(t);\n  }\n  equals(t) {\n    return st(this, S(t) ? U(this, t) : t);\n  }\n  toString() {\n    return `${this.constructor.name}(${this.q},${this.r})`;\n  }\n  translate(t) {\n    return ut(this, t);\n  }\n}\nconst T = {\n    dimensions: {\n      xRadius: 1,\n      yRadius: 1\n    },\n    orientation: x.POINTY,\n    origin: {\n      x: 0,\n      y: 0\n    },\n    offset: -1\n  },\n  rt = (r, t, e, n) => [{\n    x: e + r * 0.5,\n    y: n - t * 0.25\n  }, {\n    x: e + r * 0.5,\n    y: n + t * 0.25\n  }, {\n    x: e,\n    y: n + t * 0.5\n  }, {\n    x: e - r * 0.5,\n    y: n + t * 0.25\n  }, {\n    x: e - r * 0.5,\n    y: n - t * 0.25\n  }, {\n    x: e,\n    y: n - t * 0.5\n  }],\n  et = (r, t, e, n) => [{\n    x: e + r * 0.25,\n    y: n - t * 0.5\n  }, {\n    x: e + r * 0.5,\n    y: n\n  }, {\n    x: e + r * 0.25,\n    y: n + t * 0.5\n  }, {\n    x: e - r * 0.25,\n    y: n + t * 0.5\n  }, {\n    x: e - r * 0.5,\n    y: n\n  }, {\n    x: e - r * 0.25,\n    y: n - t * 0.5\n  }];\nfunction nt(r) {\n  const {\n    dimensions: t,\n    orientation: e,\n    origin: n,\n    offset: s\n  } = {\n    ...T,\n    ...r\n  };\n  return class extends $ {\n    get dimensions() {\n      return G(t, e);\n    }\n    get orientation() {\n      return e;\n    }\n    get origin() {\n      return tt(n, this);\n    }\n    get offset() {\n      return s;\n    }\n  };\n}\nfunction st(r, t) {\n  if (S(r) && S(t)) return r.col === t.col && r.row === t.row;\n  if (Object.hasOwn(r, \"col\") || Object.hasOwn(t, \"col\")) throw new Error(`Can't compare coordinates where one are offset coordinates. Either pass two offset coordinates or two axial/cube coordinates. Received: ${JSON.stringify(r)} and ${JSON.stringify(t)}`);\n  const e = H(r) ? E(r) : r,\n    n = H(t) ? E(t) : t;\n  return e.q === n.q && e.r === n.r;\n}\nconst ot = (r, t, e) => ({\n    col: r + P(e, t),\n    row: t\n  }),\n  it = (r, t, e) => ({\n    col: r,\n    row: t + P(e, r)\n  }),\n  W = ({\n    q: r,\n    r: t,\n    offset: e,\n    isPointy: n\n  }) => n ? ot(r, t, e) : it(r, t, e),\n  J = ({\n    orientation: r,\n    dimensions: {\n      xRadius: t,\n      yRadius: e\n    },\n    origin: {\n      x: n,\n      y: s\n    },\n    q: o,\n    r: i\n  }) => r === x.POINTY ? {\n    x: t * Math.sqrt(3) * (o + i / 2) - n,\n    y: e * 3 / 2 * i - s\n  } : {\n    x: t * 3 / 2 * o - n,\n    y: e * Math.sqrt(3) * (i + o / 2) - s\n  },\n  z = (r, t, e) => {\n    const n = r - P(e, t),\n      s = t,\n      o = -n - s;\n    return {\n      q: n,\n      r: s,\n      s: o\n    };\n  },\n  j = (r, t, e) => {\n    const n = r,\n      s = t - P(e, r),\n      o = -n - s;\n    return {\n      q: n,\n      r: s,\n      s: o\n    };\n  },\n  U = ({\n    offset: r,\n    orientation: t\n  }, {\n    col: e,\n    row: n\n  }) => t === x.POINTY ? z(e, n, r) : j(e, n, r),\n  L = r => {\n    const {\n      q: t,\n      r: e,\n      s: n\n    } = C(r);\n    let s = Math.round(t),\n      o = Math.round(e),\n      i = Math.round(n);\n    const c = Math.abs(t - s),\n      u = Math.abs(e - o),\n      h = Math.abs(n - i);\n    return c > u && c > h ? s = -o - i : u > h ? o = -s - i : i = -s - o, {\n      q: s,\n      r: o,\n      s: i\n    };\n  },\n  ct = ({\n    dimensions: {\n      xRadius: r,\n      yRadius: t\n    },\n    origin: e,\n    orientation: n\n  }, {\n    x: s,\n    y: o\n  }) => (s += e.x, o += e.y, n === x.POINTY ? L({\n    q: Math.sqrt(3) * s / (3 * r) - o / (3 * t),\n    r: 2 / 3 * (o / t)\n  }) : L({\n    q: 2 / 3 * (s / r),\n    r: Math.sqrt(3) * o / (3 * t) - s / (3 * r)\n  }));\nfunction N(r, t) {\n  return H(t) ? E(t) : S(t) ? U(r, t) : C(t);\n}\nfunction ut(r, t) {\n  const {\n      q: e,\n      r: n,\n      s\n    } = C(r),\n    {\n      q: o,\n      r: i,\n      s: c\n    } = C(t),\n    u = {\n      q: e + o,\n      r: n + i,\n      s: s + c\n    };\n  return r instanceof $ ? r.clone(u) : u;\n}\nfunction R(r, t, e) {\n  const {\n      q: n,\n      r: s,\n      s: o\n    } = N(r, t),\n    {\n      q: i,\n      r: c,\n      s: u\n    } = N(r, e);\n  return Math.max(Math.abs(n - i), Math.abs(s - c), Math.abs(o - u));\n}\nvar F = /* @__PURE__ */(r => (r.CLOCKWISE = \"CLOCKWISE\", r.COUNTERCLOCKWISE = \"COUNTERCLOCKWISE\", r))(F || {}),\n  a = /* @__PURE__ */(r => (r[r.N = 0] = \"N\", r[r.NE = 1] = \"NE\", r[r.E = 2] = \"E\", r[r.SE = 3] = \"SE\", r[r.S = 4] = \"S\", r[r.SW = 5] = \"SW\", r[r.W = 6] = \"W\", r[r.NW = 7] = \"NW\", r))(a || {});\nconst ht = [null,\n  // ambiguous\n  {\n    q: 1,\n    r: -1\n  },\n  // NE\n  {\n    q: 1,\n    r: 0\n  },\n  // E\n  {\n    q: 0,\n    r: 1\n  },\n  // SE\n  null,\n  // ambiguous\n  {\n    q: -1,\n    r: 1\n  },\n  // SW\n  {\n    q: -1,\n    r: 0\n  },\n  // W\n  {\n    q: 0,\n    r: -1\n  }\n  // NW\n  ],\n  ft = [{\n    q: 0,\n    r: -1\n  },\n  // N\n  {\n    q: 1,\n    r: -1\n  },\n  // NE\n  null,\n  // ambiguous\n  {\n    q: 1,\n    r: 0\n  },\n  // SE\n  {\n    q: 0,\n    r: 1\n  },\n  // S\n  {\n    q: -1,\n    r: 1\n  },\n  // SW\n  null,\n  // ambiguous\n  {\n    q: -1,\n    r: 0\n  }\n  // NW\n  ],\n  at = ({\n    offset: r,\n    q: t,\n    r: e,\n    col: n,\n    row: s\n  }, o) => {\n    if (o === a.S || o === a.N) {\n      const c = o === a.S ? s + 1 : s - 1;\n      return z(n, c, r);\n    }\n    const i = ht[o];\n    return {\n      q: t + i.q,\n      r: e + i.r\n    };\n  },\n  lt = ({\n    offset: r,\n    q: t,\n    r: e,\n    col: n,\n    row: s\n  }, o) => {\n    if (o === a.E || o === a.W) {\n      const c = o === a.E ? n + 1 : n - 1;\n      return j(c, s, r);\n    }\n    const i = ft[o];\n    return {\n      q: t + i.q,\n      r: e + i.r\n    };\n  },\n  I = (r, t) => r.clone(r.isPointy ? at(r, t) : lt(r, t));\nfunction b(r) {\n  return Array.isArray(r) ? function (e, n) {\n    const s = [];\n    let o = n;\n    for (const i of r) for (const c of i(e, o)) s.push(o = c);\n    return s;\n  } : r;\n}\nconst Tt = (...r) => t => r.map(t);\nfunction v(r) {\n  return gt(r) ? xt(r) : dt(r);\n}\nfunction gt(r) {\n  return r.direction in a;\n}\nfunction xt({\n  start: r,\n  direction: t,\n  length: e\n}) {\n  return function (s, o) {\n    const i = [];\n    let u = s(r ?? o);\n    !r && o && (u = I(u, t));\n    for (let h = 0; h < e; h++) i.push(u), u = I(u, t);\n    return i;\n  };\n}\nfunction dt({\n  start: r,\n  stop: t\n}) {\n  return function (n, s) {\n    const o = [],\n      i = n(r ?? s),\n      c = B(i),\n      u = B(N(i, t)),\n      h = mt(c, u),\n      f = R(i, i, t),\n      y = 1 / Math.max(f, 1);\n    let m = !r && s ? 1 : 0;\n    for (m; m <= f; m++) {\n      const O = L(h(y * m));\n      o.push(n(O));\n    }\n    return o;\n  };\n}\nfunction B({\n  q: r,\n  r: t,\n  s: e\n}) {\n  return {\n    q: r + 1e-6,\n    r: t + 1e-6,\n    s: e + -2e-6\n  };\n}\nfunction mt(r, t) {\n  return e => {\n    const n = r.q * (1 - e) + t.q * e,\n      s = r.r * (1 - e) + t.r * e;\n    return {\n      q: n,\n      r: s\n    };\n  };\n}\nconst pt = r => (t, e) => [I(t(e), r)];\nfunction _(r, t, {\n  includeSource: e = !0\n} = {}) {\n  return function (s, o) {\n    const i = [];\n    for (const c of b(r)(s, o)) {\n      e && i.push(c);\n      for (const u of b(t)(s, c)) i.push(u);\n    }\n    return i;\n  };\n}\nfunction St(r, t) {\n  return function (n, s) {\n    const {\n        width: o,\n        height: i,\n        start: c,\n        direction: u = a.E\n      } = t ? qt(r, t, n()) : r,\n      h = c ?? s ?? [0, 0],\n      f = _(v({\n        start: h,\n        direction: D(u, 2),\n        length: i\n      }), v({\n        direction: u,\n        length: o - 1\n      }))(n, h);\n    return !c && s ? f.slice(1) : f;\n  };\n}\nfunction qt(r, t, {\n  isPointy: e,\n  offset: n\n}) {\n  const {\n      col: s,\n      row: o\n    } = K(r, e, n),\n    {\n      col: i,\n      row: c\n    } = K(t, e, n),\n    u = s < i ? \"A\" : \"B\",\n    h = o < c ? \"A\" : \"B\",\n    f = u + h,\n    {\n      swapWidthHeight: y,\n      direction: m\n    } = yt[f],\n    O = Math.abs(s - i) + 1,\n    g = Math.abs(o - c) + 1;\n  return {\n    width: y ? g : O,\n    height: y ? O : g,\n    start: r,\n    direction: m\n  };\n}\nfunction K(r, t, e) {\n  if (S(r)) return r;\n  const {\n    q: n,\n    r: s\n  } = H(r) ? E(r) : C(r);\n  return W({\n    q: n,\n    r: s,\n    isPointy: t,\n    offset: e\n  });\n}\nconst yt = {\n  AA: {\n    swapWidthHeight: !1,\n    direction: a.E\n  },\n  AB: {\n    swapWidthHeight: !0,\n    direction: a.N\n  },\n  BA: {\n    swapWidthHeight: !0,\n    direction: a.S\n  },\n  BB: {\n    swapWidthHeight: !1,\n    direction: a.W\n  }\n};\nfunction Ct(r, t) {\n  return b(Array.from({\n    length: r\n  }, () => b(t)));\n}\nfunction Ot(r) {\n  const {\n    center: t,\n    rotation: e = F.CLOCKWISE\n  } = r;\n  return function (s, o) {\n    const i = e.toUpperCase(),\n      c = [];\n    let {\n      radius: u\n    } = r;\n    const h = l(u);\n    let f;\n    h ? f = s(t).translate({\n      q: u,\n      s: -u\n    }) : (f = s(r.start ?? o), u = R(f, t, f));\n    const {\n      q: y,\n      r: m,\n      s: O\n    } = N(f, t);\n    let g = s({\n      q: y,\n      r: m - u,\n      s: O + u\n    });\n    if (i === F.CLOCKWISE) for (let d = 0; d < 6; d++) for (let w = 0; w < u; w++) {\n      const {\n        q: A,\n        r: M\n      } = Q[d];\n      g = s({\n        q: g.q + A,\n        r: g.r + M\n      }), c.push(g);\n    } else for (let d = 5; d >= 0; d--) for (let w = 0; w < u; w++) {\n      const {\n        q: A,\n        r: M\n      } = Q[d];\n      g = s({\n        q: g.q - A,\n        r: g.r - M\n      }), c.push(g);\n    }\n    const k = h ? !1 : !r.start && o,\n      Y = c.findIndex(d => d.equals(f));\n    return c.slice(Y + (k ? 1 : 0)).concat(c.slice(0, Y));\n  };\n}\nconst Q = [{\n  q: 1,\n  r: 0\n}, {\n  q: 0,\n  r: 1\n}, {\n  q: -1,\n  r: 1\n}, {\n  q: -1,\n  r: 0\n}, {\n  q: 0,\n  r: -1\n}, {\n  q: 1,\n  r: -1\n}];\nfunction Nt({\n  radius: r,\n  start: t,\n  rotation: e\n}) {\n  return function (s, o) {\n    const i = t ?? o ?? [0, 0],\n      c = !t && o ? r : r + 1;\n    return _(v({\n      start: t,\n      direction: a.N,\n      length: c\n    }), Ot({\n      center: i,\n      rotation: e\n    }))(s, o);\n  };\n}\nclass q {\n  static fromIterable(t) {\n    const e = t[Symbol.iterator]().next().value;\n    if (!e) throw new TypeError(`Can't create grid from empty iterable: ${JSON.stringify(t)}`);\n    return new q(e.constructor, t);\n  }\n  static fromJSON({\n    hexSettings: t,\n    coordinates: e\n  }, n) {\n    if (n) {\n      const o = e.map(n),\n        i = o.length > 0 ? o[0].constructor : n({\n          q: 0,\n          r: 0\n        }, 0, [{\n          q: 0,\n          r: 0\n        }]).constructor;\n      return new q(i, o);\n    }\n    const s = nt(t);\n    return new q(s, e.map(o => new s(o)));\n  }\n  get size() {\n    return this.#r.size;\n  }\n  get pixelWidth() {\n    if (this.size === 0) return 0;\n    const {\n        isPointy: t,\n        width: e\n      } = this.hexPrototype,\n      n = this.toArray(),\n      {\n        0: s,\n        length: o,\n        [o - 1]: i\n      } = t ? n.sort((c, u) => u.s - c.s || c.q - u.q) : n.sort((c, u) => c.q - u.q);\n    return i.x - s.x + e;\n  }\n  get pixelHeight() {\n    if (this.size === 0) return 0;\n    const {\n        isPointy: t,\n        height: e\n      } = this.hexPrototype,\n      n = this.toArray(),\n      {\n        0: s,\n        length: o,\n        [o - 1]: i\n      } = t ? n.sort((c, u) => c.r - u.r) : n.sort((c, u) => u.s - c.s || c.r - u.r);\n    return i.y - s.y + e;\n  }\n  [Symbol.iterator]() {\n    return this.#r.values();\n  }\n  get hexPrototype() {\n    return this.#t.prototype;\n  }\n  #t;\n  #r = /* @__PURE__ */new Map();\n  constructor(t, e = []) {\n    if (t instanceof q) {\n      this.#t = t.#t, this.setHexes(t);\n      return;\n    }\n    this.#t = t, this.setHexes(this.#n(e));\n  }\n  createHex(t) {\n    return new this.#t(t);\n  }\n  getHex(t) {\n    const e = this.createHex(t);\n    return this.#r.get(e.toString());\n  }\n  hasHex(t) {\n    return this.#r.has(t.toString());\n  }\n  setHexes(t) {\n    for (const e of t) {\n      const n = e instanceof $ ? e : new this.#t(e);\n      this.#e(n);\n    }\n    return this;\n  }\n  filter(t) {\n    const e = new q(this.#t);\n    for (const n of this) t(n) && e.#e(n);\n    return e;\n  }\n  map(t) {\n    const e = new q(this.#t);\n    for (const n of this) e.#e(t(n));\n    return e;\n  }\n  traverse(t, {\n    bail: e = !1\n  } = {}) {\n    const n = new q(this.#t);\n    for (const s of this.#n(t)) {\n      const o = this.getHex(s);\n      if (o) n.#e(o);else if (e) return n;\n    }\n    return n;\n  }\n  forEach(t) {\n    for (const e of this) t(e);\n    return this;\n  }\n  reduce(t, e) {\n    if (e === void 0) {\n      let s, o, i;\n      for (const c of this) o = i, i = c, o && (s = t(o, i));\n      return s;\n    }\n    let n = e;\n    for (const s of this) n = t(n, s);\n    return n;\n  }\n  toArray() {\n    return Array.from(this);\n  }\n  // todo: add to docs that hexSettings don't include any custom properties\n  toJSON() {\n    const {\n      dimensions: t,\n      orientation: e,\n      origin: n,\n      offset: s\n    } = this.hexPrototype;\n    return {\n      hexSettings: {\n        dimensions: t,\n        orientation: e,\n        origin: n,\n        offset: s\n      },\n      coordinates: this.toArray()\n    };\n  }\n  toString() {\n    return `${this.constructor.name}(${this.size})`;\n  }\n  pointToHex(t, {\n    allowOutside: e = !0\n  } = {}) {\n    const n = ct(this.hexPrototype, t),\n      s = this.getHex(n);\n    return e ? s ?? this.createHex(n) : s;\n  }\n  distance(t, e, {\n    allowOutside: n = !0\n  } = {}) {\n    if (n) return R(this.hexPrototype, t, e);\n    const s = this.getHex(t),\n      o = this.getHex(e);\n    if (!(!s || !o)) return R(this.hexPrototype, s, o);\n  }\n  neighborOf(t, e, {\n    allowOutside: n = !0\n  } = {}) {\n    const s = I(this.createHex(t), e),\n      o = this.getHex(s);\n    return n ? o ?? s : o;\n  }\n  #e(t) {\n    this.#r.set(t.toString(), t);\n  }\n  #n(t) {\n    return this.#s(t) ? this.#o(t) : Array.isArray(t) && this.#s(t[0]) ? this.#o(b(t)) : t;\n  }\n  #s(t) {\n    return V(t);\n  }\n  #o(t) {\n    return t(this.createHex.bind(this));\n  }\n}\nexport { a as Direction, q as Grid, $ as Hex, x as Orientation, F as Rotation, C as completeCube, b as concat, G as createHexDimensions, tt as createHexOrigin, T as defaultHexSettings, nt as defineHex, R as distance, st as equals, Tt as fromCoordinates, W as hexToOffset, J as hexToPoint, wt as isAxial, S as isOffset, Z as isPoint, H as isTuple, v as line, pt as move, I as neighborOf, P as offsetFromZero, U as offsetToCube, j as offsetToCubeFlat, z as offsetToCubePointy, ct as pointToCube, St as rectangle, Ct as repeat, _ as repeatWith, Ot as ring, L as round, Nt as spiral, N as toCube, ut as translate, E as tupleToCube };"],
  "mappings": "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",
  "names": []
}
